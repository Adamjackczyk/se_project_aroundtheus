!function(){"use strict";class t{constructor(t,e,s){this._name=t.name,this._link=t.link,this._cardSelector=e,this._handleImageClick=s}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._cardImageElement.addEventListener("click",(()=>{this._handleImageClick(this._name,this._link)})),this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._toggleLikeButton()})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._deleteCard()}))}_toggleLikeButton(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}_deleteCard(){this._cardElement.remove(),this._cardElement=null}generateCard(){return this._cardElement=this._getTemplate(),this._cardImageElement=this._cardElement.querySelector(".card__image"),this._cardElement.querySelector(".card__title").textContent=this._name,this._cardImageElement.src=this._link,this._cardImageElement.alt=this._name,this._setEventListeners(),this._cardElement}}class e{constructor(t,e){this._settings=t,this._formElement=e,this._inputList=Array.from(this._formElement.querySelectorAll(this._settings.inputSelector)),this._submitButton=this._formElement.querySelector(this._settings.submitButtonSelector),this._inactiveButtonClass=this._settings.inactiveButtonClass}_hasInvalidInput(){return this._inputList.some((t=>!t.validity.valid))}toggleButtonState(){this._hasInvalidInput()?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_checkInputValidity(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}_showInputError(t){const e=this._formElement.querySelector(`#${t.id}-error`);t.classList.add(this._settings.inputErrorClass),e.textContent=t.validationMessage,e.classList.add(this._settings.errorClass)}_hideInputError(t){const e=this._formElement.querySelector(`#${t.id}-error`);t.classList.remove(this._settings.inputErrorClass),e.classList.remove(this._settings.errorClass),e.textContent=""}_setEventListeners(){this._inputList.forEach((t=>{t.addEventListener("input",(()=>{this._checkInputValidity(t),this.toggleButtonState()}))}))}enableValidation(){this._setEventListeners(),this.toggleButtonState()}resetValidation(){this._inputList.forEach((t=>{this._hideInputError(t)})),this.toggleButtonState()}}class s{constructor(t){this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popup.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(t){"Escape"===t.key&&this.close()}setEventListeners(){this._popup.addEventListener("mousedown",(t=>{(t.target.classList.contains("modal_opened")||t.target.classList.contains("modal__close"))&&this.close()}))}}class n extends s{constructor(t,e,s){super(t),this._handleFormSubmit=e,this._form=this._popup.querySelector(".modal__form"),this._formValidator=s}_getInputValues(){return this._formValues={},this._form.querySelectorAll(".modal__input").forEach((t=>{this._formValues[t.name]=t.value})),this._formValues}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(t=>{t.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._form.reset(),this._formValidator.toggleButtonState()}))}open(){super.open(),this._formValidator.resetValidation()}}const i={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};function o(t,e){u.open({name:t,link:e})}function r(e){return new t(e,"#card-template",o).generateCard()}const a=new class{constructor(t,e){let{items:s,renderer:n}=t;this._items=s,this._renderer=n,this._container=document.querySelector(e)}renderItems(){this._items.forEach((t=>this._renderer(t)))}addItem(t){this._container.prepend(t)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:t=>{const e=r(t);a.addItem(e)}},".cards__list");a.renderItems();const l={};document.querySelectorAll(i.formSelector).forEach((t=>{const s=new e(i,t);s.enableValidation(),l[t.getAttribute("id")]=s}));const c=new class{constructor(t){let{nameSelector:e,jobSelector:s}=t;this._nameElement=document.querySelector(e),this._jobElement=document.querySelector(s)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(t){let{name:e,job:s}=t;this._nameElement.textContent=e,this._jobElement.textContent=s}}({nameSelector:"#profile-title",jobSelector:"#profile-desc"}),d=new n("#profile-edit-modal",(t=>{c.setUserInfo({name:t.title,job:t.description}),d.close()}),l["edit-profile-form"]),m=new n("#add-card-modal",(t=>{const e=r({name:t.title,link:t.link});a.addItem(e),m.close()}),l["add-card-form"]);d.setEventListeners(),m.setEventListeners();const u=new class extends s{constructor(t){super(t),this._image=this._popup.querySelector(".modal__image"),this._caption=this._popup.querySelector(".modal__image-label")}open(t){let{name:e,link:s}=t;this._image.src=s,this._image.alt=e,this._caption.textContent=e,super.open()}}("#modal-image-display");u.setEventListeners(),document.getElementById("profile-edit-button").addEventListener("click",(()=>{const t=c.getUserInfo();document.getElementById("profile-title-input").value=t.name,document.getElementById("profile-description-input").value=t.job,d.open()})),document.querySelector(".profile__add-button").addEventListener("click",(()=>{m.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,